{"version":3,"sources":["App.js","serviceWorker.js","index.js","Calculator.js"],"names":["App","react_default","a","createElement","Calculator","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","_home_rupam_Desktop_reactJS_projects_project_1_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_rupam_Desktop_reactJS_projects_project_1_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_rupam_Desktop_reactJS_projects_project_1_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","prev","display_text","symbol_state","err_msg","updateDisplayText","bind","_home_rupam_Desktop_reactJS_projects_project_1_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","isInt","cls","del","symbolHandler","numHandler","equalsHandler","dotHandler","dotBeforeNum","val","valInt","parseInt","setState","num","prevState","console","log","cu","toString","cu_length","length","newStr","slice","cu_char","symbol_count","symbol","new_exp","len","output","eval","toPrecision","e","SyntaxError","message","temp","dot_found","i","react__WEBPACK_IMPORTED_MODULE_6___default","className","OutputDisplay","Buttons","handleKeyPress","MetaAuthor","_this2","clicker","event","target","textContent","_this3","map","item","key","onClick"],"mappings":"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","file":"static/js/main.8d72582f.chunk.js","sourcesContent":["/*\n ****************************\n *  Author : Rupam Kerketta *\n ****************************\n*/\n\nimport React, { Component } from 'react';\nimport Calculator from './Calculator';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Calculator />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\n\nclass Calculator extends Component{\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      prev: '',\n      display_text: '',\n      symbol_state: false,\n      err_msg: false\n    };\n    this.updateDisplayText = this.updateDisplayText.bind(this);\n    this.isInt = this.isInt.bind(this);\n    this.cls = this.cls.bind(this);\n    this.del = this.del.bind(this);\n    this.symbolHandler = this.symbolHandler.bind(this);\n    this.numHandler = this.numHandler.bind(this);\n    this.equalsHandler = this.equalsHandler.bind(this);\n    this.dotHandler = this.dotHandler.bind(this);\n    this.dotBeforeNum = this.dotBeforeNum.bind(this);\n  }\n\n  updateDisplayText(val){\n    var valInt = parseInt(val);\n\n    if(val === 'cls'){\n      this.cls();\n      this.setState({err_msg: false});\n    }\n    else if(val === 'del'){\n      if(this.state.err_msg){\n        this.cls();\n        this.setState({err_msg: false});\n      }\n      else{\n        this.del();\n      }\n    }\n    else if(val === '%' || val === '*' || val === '/' || val === '-' || val === '+'){\n      if(!this.state.err_msg){\n        this.symbolHandler(val);\n      }\n    }\n    else if(val === '.'){\n      if(!this.state.err_msg){\n        this.dotHandler();\n      }\n    }\n    else if(valInt >= 0 && valInt <= 9){\n      if(!this.state.err_msg){\n        this.numHandler(val);\n      }\n    }\n    else if(val === '='){\n      if(!this.state.err_msg){\n        this.equalsHandler();\n      }\n    }\n  }\n\n  isInt(num){\n    return (num%1===0);\n  }\n\n  cls(){\n    this.setState((prevState, props) => {return {prev: ''}});\n    this.setState((prevState, props) => {return {display_text: ''}});\n    console.log('(cls)');\n  }\n\n  del(){\n    var cu = this.state.display_text.toString();\n    var cu_length = cu.length;\n    var newStr = cu.slice(0, cu_length-1);\n    var cu_char = cu[cu_length-1];\n\n    console.log('(del) prevStr: '+cu+', newStr: '+newStr);\n    this.setState((prevState, props) => {return {display_text: newStr}});\n\n\n    if(cu_char === '%' || cu_char === '*' || cu_char === '/' || cu_char === '-' || cu_char === '+'){\n      this.setState((prevState, props) => {return {symbol_count: prevState.symbol_count-1}});\n    }\n\n    if(newStr.length === 0){\n      this.setState({display_text: this.state.prev});\n      this.setState({prev: ''});\n    }\n\n    }\n\n  symbolHandler(val){\n    var symbol = val;\n    //this.state.symbol_count += 1;\n\n    console.log('(symbol) symbol: ('+val+') symbol_state: '+this.state.symbol_state);\n    //this.setState((prevState, props) => {return {symbol_count: prevState.symbol_count+1}});\n\n    if(!this.state.symbol_state){\n      this.setState((prevState, props) =>\n      {return {display_text: prevState.display_text+symbol}});\n      this.setState({symbol_state: true});\n    }\n    else{\n      var new_exp = this.state.display_text.toString();\n      var len = new_exp.length;\n      new_exp = new_exp.slice(0, len-1)+symbol;\n      this.setState({display_text: new_exp});\n    }\n  }\n\n  numHandler(val){\n    if(this.state.display_text.toString().length === 1 && this.state.display_text[0] === '0'){\n      this.setState((prevState, props) => {return {display_text: val.toString()}});\n    }\n    else{\n      this.setState((prevState, props) => {return {display_text: prevState.display_text+val.toString()}});\n    }\n    console.log('(integer) '+val);\n    console.log('(display_text) '+this.state.display_text);\n    this.setState({symbol_state: false});\n  }\n\n  equalsHandler(){\n    var output;\n    try{\n      output = eval(this.state.display_text);\n      this.setState({prev: this.state.display_text});\n      this.setState({display_text: (this.isInt(output)? output.toString() : output.toPrecision(5).toString())});\n    }\n    catch(e){\n      if(e instanceof SyntaxError){\n        this.setState({prev: e.message});\n        this.setState({display_text: 'Click cls to reset'});\n        this.setState({err_msg: true});\n      }\n    }\n  }\n\n  dotHandler(){\n    if(!this.dotBeforeNum()){\n      var new_exp;\n      if(this.state.display_text.toString().length === 0){\n        new_exp = '0.';\n      }\n      else{\n        new_exp = this.state.display_text + '.';\n      }\n      this.setState({display_text: new_exp});\n    }\n\n  }\n\n  dotBeforeNum(){\n    var temp = this.state.display_text.toString();\n    var len = temp.length;\n    //var break_point;\n    var dot_found = false;\n    var i = len-1;\n\n    while( i >= 0 ){\n      if(temp[i] ==='.'){\n        dot_found = true;\n        break;\n      }\n      else if(temp[i] === '%' || temp[i] === '*' || temp[i] === '/' || temp[i] === '-' || temp[i] === '+'){\n        dot_found = false;\n        break;\n      }\n      i -= 1;\n    }\n\n    //console.log(dot_found+' break_point:'+break_point);\n    return dot_found;\n  }\n\n\n  render(){\n    return(\n      <div className=\"container\">\n        <OutputDisplay prev={this.state.prev} display_text={this.state.display_text} err_msg={this.state.err_msg}/>\n        <Buttons updateDisplayText={this.updateDisplayText} handleKeyPress={this.handleKeyPress}/>\n        <MetaAuthor />\n      </div>\n    );\n  }\n}\n\nclass OutputDisplay extends Component{\n  render(){\n    return(\n      <div className=\"display-output-wrapper\">\n        <div className={\"output-text\"+(this.props.err_msg? ' err-msg' : '')}>{this.props.prev}</div>\n        <div className={\"output-text\"+(this.props.err_msg? ' err-msg' : '')}>{this.props.display_text}</div>\n      </div>\n    );\n  }\n}\n\nclass Buttons extends Component{\n\n  constructor(props){\n    super(props);\n\n    this.state = {};\n    this.clicker = this.clicker.bind(this);\n  }\n\n  clicker(event){\n    this.props.updateDisplayText(event.target.textContent);\n  }\n\n  render(){\n    const arr = ['cls', 'del', '%', '*', '7', '8', '9', '/', '4', '5', '6', '-', '1', '2', '3', '+', '', '0', '.', '='];\n    return(\n      <div className=\"Buttons\">\n        {arr.map((item, key) =>\n          <div\n            className={'btn-'+key+' btn'+((key === 2 || key === 3 || key === 7 || key === 11 || key === 15 || key === 18 || key === 19)? ' symbol' : '')}\n            onClick={this.clicker}>\n            <div className=\"div-text\">{item}</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass MetaAuthor extends Component{\n  render(){\n    return(\n      <div className=\"metaAuthor\">Author: Rupam Kerketta</div>\n    );\n  }\n}\n\nexport default Calculator;\n"],"sourceRoot":""}